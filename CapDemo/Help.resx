<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>HIT YOUR GOALS
a.	Nội dung
·	Trò chơi kiểm tra kiến thức về các giai đoạn trong quy trình làm phần mềm đi từ lấy yêu cầu, phân tích thiết kế, lập trình, kiểm thử, cài đặt, và quản lý dự án.
·	Các đội cần phải trả lời đúng các câu hỏi để đi qua các giai đoạn. Trò chơi kết thúc khi hết 1 lượt có đội hoàn thành tất cả các giai đoạn của quy trình.
b.	Luật chơi
·	Bản đồ thể hiện 1 quy trình phát triển phần mềm. Mỗi giai đoạn có 1 số điểm dừng. Các đội bắt đầu tại điểm dừng đầu tiên của giai đoạn đầu tiên trong quy trình.
·	Ở mỗi lượt thi đấu, 4 đội luân phiên trả lời câu hỏi ngẫu nhiên thuộc lĩnh vực mà giai đoạn đang đứng. Tại mỗi lượt:
o	Đội tới lượt sẽ chọn câu hỏi giai đoạn hoặc câu hỏi quản lý.
o	Sau khi nhận được câu hỏi, đội có 5 giây suy nghĩ để ra quyết định có chọn một trong hai quyền sau hay không:
§	Thách đấu các đội còn lại. Mỗi lần chỉ được thách đấu 1 hoặc 2 đội.
·	Đội ra tín hiệu thách đấu bằng cách nêu rõ tên đội bị thách đấu.
·	Đội thách đấu và đội bị thách đấu có 25 giây suy nghĩ và trả lời vào bảng.
§	Nhờ trợ giúp từ khán giả. Mỗi đội chỉ có một lần được sử dụng quyền trợ giúp ở vòng thi này.
·	Nếu đội ra yêu cầu trợ giúp từ khán giả, khán giả sẽ có 25 giây để suy nghĩ và đưa ra câu trả lời. Sau đó đội sẽ xác nhận câu trả lời cuối cùng.
·	Nếu câu trả lời là đúng, đội được đánh giá là vượt qua và chuyển sang điểm dừng tiếp theo.
·	Nếu câu trả lời là sai, đội giữ nguyên vị trí.
§	Đội không được đồng thời chọn quyền thách đấu và trợ giúp ở cùng một câu hỏi.
o	Sau đó các đội có 25 giây để suy nghĩ và chọn phương án trả lời
o	Ban giám khảo sẽ đánh giá câu trả lời của đội. Nếu câu trả lời được đánh giá là vượt qua, đội chọn câu hỏi sẽ chuyển sang điểm dừng tiếp theo, ngược lại đội vẫn giữ nguyên vị trí.
·	Khi kết thúc lượt đấu, nếu có đội vượt qua được điểm dừng cuối cùng trên bản đồ thì cuộc chơi sẽ kết thúc.
·	Ở mỗi giai đoạn có một số lượng câu hỏi nhất định. Khi đội nào không còn câu hỏi trong giai đoạn mình đang dừng thì sẽ bị loại khỏi trò chơi.
·	Ở lượt trả lời câu hỏi, các đội được quyền chọn câu hỏi trong giai đoạn đội đang đứng hay câu hỏi về quản lý dự án. Các câu hỏi liên quan đến giai đoạn quyết định bước di chuyển của đội. Các câu hỏi về quản lý dự án đem lại điểm thưởng và không ảnh hưởng đến vị trí hiện tại của đội.
c.	Cách tính điểm
·	Trả lời đúng câu hỏi giai đoạn: 20 điểm/câu
·	Trả lời đúng câu hỏi quản lý: 30 điểm/câu
·	Trả lời sai câu hỏi quản lý: -10 điểm/câu
·	Đội vượt qua điểm dừng cuối cùng: cộng 30 điểm
·	Đối với đội bị thách đấu
a.	Nếu trả lời sai: bị trừ 20 điểm. Nếu đội thách đấu trả lời đúng thì sẽ cộng 20 điểm này cho đội thách đấu
b.	Nếu trả lời đúng: được cộng 20 điểm và trừ 20 điểm này cho đội thách đấu
·	Nếu đội dùng quyền trợ giúp từ khán giả
a.	Căn cứ vào câu trả lời xác nhận cuối cùng của đội, nếu đúng đội được cộng 20 điểm hoặc 30 điểm tùy vào câu hỏi giai đoạn hay câu hỏi quản lý. Nếu là câu hỏi quản lý, trả lời sai vẫn bị trừ 10 điểm.
</value>
  </data>
</root>